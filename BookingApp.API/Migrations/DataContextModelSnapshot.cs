// <auto-generated />
using System;
using BookingApp.BookingApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BookingApp.API.Data.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Payment", b =>
                {
                    b.Property<Guid>("Payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Payment_type")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Payment_id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Payment_Detail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Paydet_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Payment_id")
                        .HasColumnType("char(36)");

                    b.Property<int>("Total_Price")
                        .HasColumnType("int");

                    b.Property<Guid>("bookingDetailId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("Payment_id")
                        .IsUnique();

                    b.HasIndex("bookingDetailId");

                    b.ToTable("Payment_Detail");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Promotion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date_end")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date_start")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Discount_Rate")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Promotion_Name")
                        .HasColumnType("longtext");

                    b.HasKey("Promotion_id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Promotion_Apply", b =>
                {
                    b.Property<Guid>("Promotion_Apply_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Promotion_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("room_type_id")
                        .HasColumnType("char(36)");

                    b.HasKey("Promotion_Apply_Id");

                    b.HasIndex("Promotion_id")
                        .IsUnique();

                    b.HasIndex("room_type_id");

                    b.ToTable("Promotion_Apply");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("MaxGuest")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("RoomTypeId1")
                        .HasColumnType("char(36)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex("RoomTypeId1")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Canceled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<Guid>("Coupon_Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoomAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Coupon_Id")
                        .IsUnique();

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.BookingDetail", b =>
                {
                    b.Property<Guid>("BookingDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<float>("RoomQuantity")
                        .HasColumnType("float");

                    b.Property<Guid>("roomTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("BookingDetailId");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.HasIndex("roomTypeId");

                    b.ToTable("BookingsDetails");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Coupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Reduction")
                        .HasColumnType("int");

                    b.Property<bool>("Remain")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("BookingDetailId")
                        .HasColumnType("int");

                    b.Property<Guid>("PaymentDetailId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentDetailId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.RoomImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DataUrl")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("room_id")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("room_id");

                    b.ToTable("RoomImages");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.RoomType", b =>
                {
                    b.Property<Guid>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("NumAdult")
                        .HasColumnType("float");

                    b.Property<float>("NumChildren")
                        .HasColumnType("float");

                    b.Property<float>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Customer", b =>
                {
                    b.HasBaseType("BookingApp.BookingApp.API.Data.Entities.User");

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Payment_Detail", b =>
                {
                    b.HasOne("BookingApp.API.Data.Entities.Payment", "payment")
                        .WithOne("paymentDetail")
                        .HasForeignKey("BookingApp.API.Data.Entities.Payment_Detail", "Payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.BookingDetail", "bookingDetail")
                        .WithMany()
                        .HasForeignKey("bookingDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bookingDetail");

                    b.Navigation("payment");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Promotion_Apply", b =>
                {
                    b.HasOne("BookingApp.API.Data.Entities.Promotion", "promotion")
                        .WithOne("promotion_Apply")
                        .HasForeignKey("BookingApp.API.Data.Entities.Promotion_Apply", "Promotion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("room_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");

                    b.Navigation("promotion");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Room", b =>
                {
                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.RoomType", null)
                        .WithOne("Room")
                        .HasForeignKey("BookingApp.API.Data.Entities.Room", "RoomTypeId1");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Booking", b =>
                {
                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.Coupon", "coupon")
                        .WithOne("booking")
                        .HasForeignKey("BookingApp.BookingApp.API.Data.Entities.Booking", "Coupon_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.Customer", "customer")
                        .WithOne("booking")
                        .HasForeignKey("BookingApp.BookingApp.API.Data.Entities.Booking", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coupon");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.BookingDetail", b =>
                {
                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.Booking", "booking")
                        .WithOne("bookingDetail")
                        .HasForeignKey("BookingApp.BookingApp.API.Data.Entities.BookingDetail", "BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingApp.BookingApp.API.Data.Entities.RoomType", "roomType")
                        .WithMany()
                        .HasForeignKey("roomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("booking");

                    b.Navigation("roomType");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.History", b =>
                {
                    b.HasOne("BookingApp.API.Data.Entities.Payment_Detail", "Payment_id")
                        .WithMany()
                        .HasForeignKey("PaymentDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment_id");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.RoomImage", b =>
                {
                    b.HasOne("BookingApp.API.Data.Entities.Room", "Rooms")
                        .WithMany("RoomImages")
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Payment", b =>
                {
                    b.Navigation("paymentDetail");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Promotion", b =>
                {
                    b.Navigation("promotion_Apply");
                });

            modelBuilder.Entity("BookingApp.API.Data.Entities.Room", b =>
                {
                    b.Navigation("RoomImages");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Booking", b =>
                {
                    b.Navigation("bookingDetail");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Coupon", b =>
                {
                    b.Navigation("booking");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.RoomType", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("BookingApp.BookingApp.API.Data.Entities.Customer", b =>
                {
                    b.Navigation("booking");
                });
#pragma warning restore 612, 618
        }
    }
}
